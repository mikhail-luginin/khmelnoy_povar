services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    restart: always
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - ./app/.env
    command: >
      sh -c "python manage.py migrate
             python manage.py collectstatic --noinput
             gunicorn --bind 0.0.0.0:8000 config.wsgi -w 20 --timeout 120"

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "80:80"
    depends_on:
      - app

  redis:
    image: redis:7.0.5-alpine
    restart: always
    hostname: redis

  worker:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    restart: always
    hostname: worker
    entrypoint: celery
    command: -A config.celery.app worker --loglevel=info
    links:
      - redis
    depends_on:
      - redis

  beat_worker:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    restart: always
    hostname: beat_worker
    entrypoint: celery
    command: -A config.celery.app beat -s /tmp/celerybeat-schedule --loglevel=info
    links:
      - redis
    depends_on:
      - redis

volumes:
  static_volume:
  media_volume: