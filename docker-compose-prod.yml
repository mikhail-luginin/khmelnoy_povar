services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: always
    expose:
      - 8080
    volumes:
      - ./app:/home/app/web/app
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./app/.env
    command: >
      sh -c "python manage.py migrate --noinput
             python manage.py collectstatic --noinput
             gunicorn --bind 0.0.0.0:8080 config.wsgi -w 20 --timeout 120"

  nginx:
    image: nginx:1.19.8-alpine
    restart: on-failure
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    depends_on:
      - app
    ports:
      - "1337:80"
    env_file:
      - ./app/.env

  redis:
    image: redis:7.0.5-alpine
    restart: always
    hostname: redis

  worker:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: always
    hostname: worker
    entrypoint: celery
    command: -A config.celery.app worker --loglevel=info
    volumes:
      - ./app:/home/app/web/app
    links:
      - redis
    depends_on:
      - redis

  beat_worker:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: always
    hostname: beat_worker
    entrypoint: celery
    command: -A config.celery.app beat -s /tmp/celerybeat-schedule --loglevel=info
    volumes:
      - ./app:/home/app/web/app
    links:
      - redis
    depends_on:
      - redis

volumes:
  static_volume:
  media_volume: